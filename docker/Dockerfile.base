# Build stage for vibe-kanban
FROM alpine:3.22.1 AS vibe-kanban-builder

# Install Rust build dependencies
RUN apk add --no-cache \
    curl \
    wget \
    git \
    build-base \
    musl-dev \
    openssl-dev \
    pkgconfig \
    nodejs \
    npm \
    ca-certificates \
    bash

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install pnpm and Rust development tools
RUN npm install -g pnpm && \
    cargo install cargo-watch sqlx-cli

# Clone and build vibe-kanban
WORKDIR /build
RUN git clone https://github.com/thevahidal/vibe-kanban.git . && \
    pnpm install && \
    ./build-npm-package.sh

# Runtime stage
FROM alpine:3.22.1

# Install base development tools and runtime dependencies
RUN apk add --no-cache \
    curl \
    wget \
    git \
    vim \
    nano \
    htop \
    build-base \
    python3 \
    py3-pip \
    nodejs \
    npm \
    ca-certificates \
    bash \
    shadow \
    sudo \
    openssh-client \
    tar \
    gzip

# Install pnpm and essential Node.js tools
RUN npm install -g pnpm

# Install VS Code Server
RUN curl -fsSL https://code-server.dev/install.sh | sh

# Copy vibe-kanban binaries from builder stage
COPY --from=vibe-kanban-builder /build/npx-cli/*.tgz /tmp/vibe-kanban.tgz
RUN npm install -g /tmp/vibe-kanban.tgz && rm /tmp/vibe-kanban.tgz

# Create a non-root user for development
RUN adduser -D -s /bin/bash developer && \
    echo 'developer ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Create workspace directory
RUN mkdir -p /workspace && chown developer:developer /workspace

# Switch to developer user
USER developer
WORKDIR /workspace

# Configure VS Code Server
RUN mkdir -p /home/developer/.config/code-server
COPY --chown=developer:developer docker/config/code-server.yaml /home/developer/.config/code-server/config.yaml

# Expose common ports
EXPOSE 8080 3000 8000 8888

CMD ["bash"]

