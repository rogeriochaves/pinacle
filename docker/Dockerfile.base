# Build stage for vibe-kanban
FROM pinacledev/vk-alpine:latest AS vibe-kanban-builder

# Build stage for code-server
FROM pinacledev/code-server-alpine:4.104.2-arm64 AS code-server-builder

# Runtime stage
FROM node:22-alpine

# Install base development tools and runtime dependencies
RUN apk add --no-cache \
    curl \
    wget \
    git \
    vim \
    htop \
    python3 \
    py3-pip \
    ca-certificates \
    bash \
    shadow \
    sudo \
    openssh-client \
    tar \
    gzip \
    ttyd \
    tmux \
    nginx

# Install pnpm and essential Node.js tools
RUN npm install -g pnpm

# Copy code-server binaries from builder stage
COPY --from=code-server-builder /code-server/release-standalone /usr/local/code-server
RUN ln -s /usr/local/code-server/bin/code-server /usr/local/bin/code-server

# Copy vibe-kanban binaries from builder stage
COPY --from=vibe-kanban-builder /build/target/release/server /usr/local/bin/vibe-kanban

# # Create a non-root user for development
# RUN adduser -D -s /bin/bash developer && \
#     echo 'developer ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Set tmux config
RUN echo "set -g status off" >> /etc/tmux.conf
# UTF-8 for better tmux rendering and system-wide
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

# OpenRC
RUN apk add --no-cache openrc

# Create workspace directory, and make it the root's default
RUN mkdir -p /workspace
WORKDIR /workspace
RUN mkdir -p /workspace && \
    chown root:root /workspace && \
    sed -i 's|/root|/workspace|' /etc/passwd

# PNPM global setup
ENV PNPM_HOME="/root/.local/share/pnpm" \
    PATH="/root/.local/share/pnpm:$PATH" \
    SHELL="bash"

# Configure Nginx for transparent port proxying
RUN mkdir -p /etc/nginx/http.d && \
    rm -f /etc/nginx/http.d/default.conf
COPY docker/config/nginx.conf /etc/nginx/nginx.conf
# Add nginx to OpenRC to start automatically
RUN rc-update add nginx default

CMD ["/sbin/init"]
