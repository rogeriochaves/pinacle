user root;
worker_processes auto;
error_log /tmp/nginx-error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /tmp/nginx-access.log main;

    # Use /tmp for nginx temporary directories
    client_body_temp_path /tmp/nginx_client_body;
    proxy_temp_path /tmp/nginx_proxy;
    fastcgi_temp_path /tmp/nginx_fastcgi;
    uwsgi_temp_path /tmp/nginx_uwsgi;
    scgi_temp_path /tmp/nginx_scgi;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Extract port from hostname pattern: localhost-PORT.pod-SLUG.pinacle.dev
        set $target_port 3000;

        if ($host ~* ^localhost-(\d+)\..*$) {
            set $target_port $1;
        }

        location / {
            # Proxy to localhost:$target_port
            proxy_pass http://127.0.0.1:$target_port;

            # Rewrite Host header to localhost:port so backend services accept the connection
            # This makes the proxy fully transparent - services think they're accessed directly
            proxy_set_header Host localhost:$target_port;

            # Preserve original client information in X-Forwarded headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Timeouts for long-running connections
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;

            # Disable buffering for real-time applications
            proxy_buffering off;
            proxy_request_buffering off;

            # Allow large uploads
            client_max_body_size 0;

            # Pass through WebSocket headers
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        }
    }
}
